JAVA 1

@ResponseBody 를 사용
HTTP의 BODY에 문자 내용을 직접 반환
‘viewResolver’ 대신에 ‘HttpMessageConverter’가 동작
기본 문자처리: StringHttpMessageConverter
기본 객체처리: MappingJackson2HttpMessageConverter
byte 처리 등등 기타 여러 HttpMessageConverter가 기본으로 등록되어 있음
(객체를 제이슨으로 바꿔주는 라이브러리가 많지만 spring은 jackson을 기본으로 탑재 시킨다.)

controller 통해서 외부 요청 받고, service에서 비지니스 로직을 만들고, repository에서 데이터저장을
하는것이 정형화된 패턴이다.

DI의 3가지 방법
1. 생성자 주입 => 요즘 권장하는 방법
2. 필드 주입 => 별로 안좋음
3. 세터주입 => 별로 안좋음

자바코드로 직접 스프링 빈에 등록을 하는 방법을 사용하면 나중에 레포지토리를 바꿀 때 config파일만 수정하면
레포지토리를 바꿀수 있다!

html 우선순위 => 템플릿 먼저 보고 없으면 스태틱으로 간다(템플릿에 있으면 스태틱은 무시)

DB접근 => build.gradle에 사용하는 db모듈 추가, application.properties에 사용하는 db엔진 추가

개방-폐쇄 원칙(OCP, Open-Closed Principle) 확장에는 열려있고, 수정, 변경에는 닫혀있다.
스프링의 DI (Dependencies Injection)을 사용하면 기존 코드를 전혀 손대지 않고, 설정만으로 구현 클래스를 변경할 수 있다.회원을 등록하고 DB에 결과가 잘 입력되는지 확인하자.
데이터를 DB에 저장하므로 스프링 서버를 다시 실행해도 데이터가 안전하게 저장된다.

./h2.sh => h2 디비 실행 명령어(위치가 bin안쪽이여야함.)

단위테스트가 통합테스트보다 속도가 월등히 빨라서 단위테스트를 선호한다.
나중에 로직이 많아지면 통합테스트의 속도가 많이 느림.

테스트코드가 제일 중요!!!

JPA

JPA는 기존의 반복 코드는 물론이고, 기본적인 SQL도 JPA가 직접 만들어서 실행해준다. JPA를 사용하면, SQL과 데이터 중심의 설계에서 객체 중심의 설계로 패러다임을 전환을 할 수 있다. JPA를 사용하면 개발 생산성을 크게 높일 수 있다.
jpa는 join 들어올때 모든 데이터 변경이 @Transaction 안에서 실행되어야 한다.

스프링 데이터 JPA(Java Persistence API)
JpaRepository에서 다 지원이 되기 때문에 개발생산성 급증

ORM(Object-Relational Mapping)
우리가 일반 적으로 알고 있는 애플리케이션 Class와 RDB(Relational DataBase)의 테이블을매핑(연결)한다는 뜻이며, 기술적으로는 어플리케이션의 객체를 RDB 테이블에 자동으로 영속화 해주는 것이라고 보면된다.


AOP(Aspect Oriented Programming)
모든 메소드의 호출 시간을 측정하고 싶다면?공통 관심 사항(cross-cutting concern) vs 핵심 관심 사항(core concern)
회원 가입 시간, 회원 조회 시간을 측정하고 싶다면?
공통 관심사항이 시간을 측정하는 로직이고, 핵심 관심 사항은 말그대로 메인 로직들이다.
이 두가지 관심사항을 분리시켜야 유지보수도 가능해지고 생산성도 높아진다.(AOP가 가능하게 한다.)

문제
1. 회원가입, 회원 조회에 시간을 측정하는 기능은 핵심 관심 사항이 아니다.
2. 시간을 측정하는 로직은 공통 관심 사항이다.
3. 시간을 측정하는 로직과 핵심 비즈니스의 로직이 섞여서 유지보수가 어렵다.
4. 시간을 측정하는 로직을 별도의 공통 로직으로 만들기 매우 어렵다.
5. 시간을 측정하는 로직을 변경할 때 모든 로직을 찾아가면서 변경해야 한다.

해결
1. 회원가입, 회원 조회등 핵심 관심사항과 시간을 측정하는 공통 관심 사항을 분리한다.
2. 시간을 측정하는 로직을 별도의 공통 로직으로 만들었다.
3. 핵심 관심 사항을 깔끔하게 유지할 수 있다.
4. 변경이 필요하면 이 로직만 변경하면 된다.
5. 원하는 적용 대상을 선택할 수 있다.


